package pl.kielce.entity;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public enum MotorType {
	SPORT ("Sport",300),
	ENDURO ("Enduro",180), 
	CROSS ("Cross",120), 
	STREET ("Street",220), 
	SCOOTER ("Scooter",120), 
	TOURING ("Touring",200);
	
//	private static final List<MotorType> MOTORS =
//    Collections.unmodifiableList(Arrays.asList(values()));
//	private static final int SIZE = MOTORS.size();
//	private static final Random RANDOM = new Random();
//	public static MotorType randomMotorType() {
//		 return MOTORS.get(RANDOM.nextInt(SIZE));
//	}
	 private static final Map<String, MotorType> BY_LABEL = new HashMap<>();
	    private static final Map<Integer, MotorType> BY_ATOMIC_NUMBER = new HashMap<>();
	    private static final Map<Float, MotorType> BY_ATOMIC_WEIGHT = new HashMap<>();
	    
	    static {
	        for (Element e : values()) {
	            BY_LABEL.put(e.label, e);
	            BY_ATOMIC_NUMBER.put(e.atomicNumber, e);
	            BY_ATOMIC_WEIGHT.put(e.atomicWeight, e);
	        }
	    }

	    public final String label;
	    public final int atomicNumber;
	    public final float atomicWeight;

	    private MotorType(String label, int atomicNumber, float atomicWeight) {
	        this.label = label;
	        this.atomicNumber = atomicNumber;
	        this.atomicWeight = atomicWeight;
	    }

	    public static MotorType valueOfLabel(String label) {
	        return BY_LABEL.get(label);
	    }

	    public static MotorType valueOfAtomicNumber(int number) {
	        return BY_ATOMIC_NUMBER.get(number);
	    }

	    public static MotorType valueOfAtomicWeight(float weight) {
	        return BY_ATOMIC_WEIGHT.get(weight);
	    }
	}